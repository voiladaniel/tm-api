// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravianManager.Data.Sql.Context;

namespace TravianManager.Migrations
{
    [DbContext(typeof(EntityFrameworkDbContext))]
    partial class EntityFrameworkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TravianManager.Core.Data.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountType");

                    b.Property<string>("Name");

                    b.Property<int?>("UserID");

                    b.Property<string>("XCoord");

                    b.Property<string>("YCoord");

                    b.HasKey("AccountID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TravianManager.Core.Data.Attacker", b =>
                {
                    b.Property<int>("AttackerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID");

                    b.Property<string>("NotBeforeTime");

                    b.Property<string>("SpeedArtifact");

                    b.Property<int>("TemplateID");

                    b.Property<int>("TournamentSquare");

                    b.Property<int>("TroopSpeed");

                    b.HasKey("AttackerID");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("Attackers");
                });

            modelBuilder.Entity("TravianManager.Core.Data.Defender", b =>
                {
                    b.Property<int>("DefenderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID");

                    b.Property<string>("ArrivingTime");

                    b.Property<int>("AttackType");

                    b.Property<int>("AttackerID");

                    b.Property<string>("AttackingTime");

                    b.Property<int>("TemplateID");

                    b.HasKey("DefenderID");

                    b.HasIndex("AccountID");

                    b.HasIndex("AttackerID");

                    b.ToTable("Defenders");
                });

            modelBuilder.Entity("TravianManager.Core.Data.Plan", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("UserID");

                    b.HasKey("PlanID");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("TravianManager.Core.Data.PlanAttacker", b =>
                {
                    b.Property<int>("PlanAttackerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID");

                    b.Property<int>("PlanID");

                    b.Property<string>("SpeedArtifact");

                    b.Property<int>("TournamentSquare");

                    b.Property<int>("TroopSpeed");

                    b.HasKey("PlanAttackerID");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("PlanAttackers");
                });

            modelBuilder.Entity("TravianManager.Core.Data.PlanDefender", b =>
                {
                    b.Property<int>("PlanDefenderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID");

                    b.Property<string>("ArrivingTime");

                    b.Property<int>("AttackType");

                    b.Property<int>("AttackerConflict");

                    b.Property<string>("AttackingTime");

                    b.Property<int>("PlanAttackerID");

                    b.Property<int>("PlanID");

                    b.Property<int>("TargetID");

                    b.HasKey("PlanDefenderID");

                    b.HasIndex("AccountID");

                    b.HasIndex("PlanAttackerID");

                    b.HasIndex("TargetID");

                    b.ToTable("PlanDefenders");
                });

            modelBuilder.Entity("TravianManager.Core.Data.PlanSetting", b =>
                {
                    b.Property<int>("PlanSettingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FakeMessage");

                    b.Property<int>("IncludeTTA");

                    b.Property<int>("IncludeTTL");

                    b.Property<string>("Message");

                    b.Property<int>("PlanID");

                    b.Property<string>("RealMessage");

                    b.Property<int>("SafeTime");

                    b.Property<int>("ServerSpeed");

                    b.Property<string>("TTAMessage");

                    b.Property<string>("TTLMessage");

                    b.Property<int>("TimeBuffer");

                    b.HasKey("PlanSettingID");

                    b.ToTable("PlanSettings");
                });

            modelBuilder.Entity("TravianManager.Core.Data.Setting", b =>
                {
                    b.Property<int>("SettingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TemplateID");

                    b.Property<int>("TimeInterval");

                    b.HasKey("SettingID");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("TravianManager.Core.Data.Target", b =>
                {
                    b.Property<int>("TargetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID");

                    b.Property<int?>("PlanID");

                    b.HasKey("TargetID");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("TravianManager.Core.Data.Template", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("UserID");

                    b.HasKey("TemplateID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("TravianManager.Core.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TravianManager.Core.Data.Attacker", b =>
                {
                    b.HasOne("TravianManager.Core.Data.Account", "Account")
                        .WithOne()
                        .HasForeignKey("TravianManager.Core.Data.Attacker", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TravianManager.Core.Data.Defender", b =>
                {
                    b.HasOne("TravianManager.Core.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TravianManager.Core.Data.Attacker")
                        .WithMany("Defender")
                        .HasForeignKey("AttackerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TravianManager.Core.Data.PlanAttacker", b =>
                {
                    b.HasOne("TravianManager.Core.Data.Account", "Account")
                        .WithOne()
                        .HasForeignKey("TravianManager.Core.Data.PlanAttacker", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TravianManager.Core.Data.PlanDefender", b =>
                {
                    b.HasOne("TravianManager.Core.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TravianManager.Core.Data.PlanAttacker", "PlanAttacker")
                        .WithMany()
                        .HasForeignKey("PlanAttackerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TravianManager.Core.Data.Target")
                        .WithMany("PlanDefender")
                        .HasForeignKey("TargetID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TravianManager.Core.Data.Target", b =>
                {
                    b.HasOne("TravianManager.Core.Data.Account", "Account")
                        .WithOne()
                        .HasForeignKey("TravianManager.Core.Data.Target", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
